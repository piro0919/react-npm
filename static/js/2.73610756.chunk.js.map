{"version":3,"sources":["components/packages/ReactAutosuggest/index.tsx","components/packages/ReactAutosuggest/style.module.scss"],"names":["ReactAutosuggest","packages","usePackages","useState","suggestions","setSuggestions","value","setValue","handleChange","useCallback","_","newValue","inputProps","useMemo","onChange","placeholder","getSuggestionValue","name","handleSuggestionsClearRequested","handleSuggestionsFetchRequested","filter","indexOf","renderSuggestion","onSuggestionsClearRequested","onSuggestionsFetchRequested","theme","styles","module","exports"],"mappings":"yLA6DeA,UAnDc,WAC3B,IAAMC,EAAWC,cADgB,EAEKC,mBAASF,GAFd,mBAE1BG,EAF0B,KAEbC,EAFa,OAGPF,mBAA0C,IAHnC,mBAG1BG,EAH0B,KAGnBC,EAHmB,KAI3BC,EAAeC,uBACnB,SAACC,EAAD,GAAsB,IAAhBC,EAAe,EAAfA,SACJJ,EAASI,KAEX,IAEIC,EAAaC,mBACjB,iBAAO,CACLP,QACAQ,SAAUN,EACVO,YAAa,cAEf,CAACP,EAAcF,IAEXU,EAAqBP,uBAEzB,qBAAGQ,OAAiB,IAChBC,EAAkCT,uBAEtC,WACAJ,EAAe,MACd,IACGc,EAAkCV,uBAGtC,YAAgB,IAAbH,EAAY,EAAZA,MACDD,EAAeJ,EAASmB,QAAO,qBAAGH,KAAgBI,QAAQf,IAAU,QAEtE,CAACL,IAEGqB,EAAmBb,uBAEvB,gBAAGQ,EAAH,EAAGA,KAAH,OAAc,8BAAMA,MAAa,IAEnC,OACE,cAAC,IAAD,CACED,mBAAoBA,EACpBJ,WAAYA,EACZW,4BAA6BL,EAC7BM,4BAA6BL,EAC7BG,iBAAkBA,EAClBlB,YAAaA,EACbqB,MAAOC,Q,mBCvDbC,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,yBAA2B,wCAAwC,WAAa","file":"static/js/2.73610756.chunk.js","sourcesContent":["import usePackages, { Packages } from \"hooks/usePackages\";\r\nimport React, { FC, useCallback, useMemo, useState } from \"react\";\r\nimport Autosuggest, {\r\n  AutosuggestPropsBase,\r\n  InputProps,\r\n} from \"react-autosuggest\";\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype Suggestion = Packages[0];\r\n\r\nconst ReactAutosuggest: FC = () => {\r\n  const packages = usePackages();\r\n  const [suggestions, setSuggestions] = useState(packages);\r\n  const [value, setValue] = useState<InputProps<Suggestion>[\"value\"]>(\"\");\r\n  const handleChange = useCallback<InputProps<Suggestion>[\"onChange\"]>(\r\n    (_, { newValue }) => {\r\n      setValue(newValue);\r\n    },\r\n    []\r\n  );\r\n  const inputProps = useMemo<InputProps<Suggestion>>(\r\n    () => ({\r\n      value,\r\n      onChange: handleChange,\r\n      placeholder: \"Type 'r'\",\r\n    }),\r\n    [handleChange, value]\r\n  );\r\n  const getSuggestionValue = useCallback<\r\n    AutosuggestPropsBase<Suggestion>[\"getSuggestionValue\"]\r\n  >(({ name }) => name, []);\r\n  const handleSuggestionsClearRequested = useCallback<\r\n    NonNullable<AutosuggestPropsBase<Suggestion>[\"onSuggestionsClearRequested\"]>\r\n  >(() => {\r\n    setSuggestions([]);\r\n  }, []);\r\n  const handleSuggestionsFetchRequested = useCallback<\r\n    NonNullable<AutosuggestPropsBase<Suggestion>[\"onSuggestionsFetchRequested\"]>\r\n  >(\r\n    ({ value }) => {\r\n      setSuggestions(packages.filter(({ name }) => name.indexOf(value) >= 0));\r\n    },\r\n    [packages]\r\n  );\r\n  const renderSuggestion = useCallback<\r\n    NonNullable<AutosuggestPropsBase<Suggestion>[\"renderSuggestion\"]>\r\n  >(({ name }) => <div>{name}</div>, []);\r\n\r\n  return (\r\n    <Autosuggest\r\n      getSuggestionValue={getSuggestionValue}\r\n      inputProps={inputProps}\r\n      onSuggestionsClearRequested={handleSuggestionsClearRequested}\r\n      onSuggestionsFetchRequested={handleSuggestionsFetchRequested}\r\n      renderSuggestion={renderSuggestion}\r\n      suggestions={suggestions}\r\n      theme={styles}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ReactAutosuggest;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__rkMIQ\",\"suggestionsContainerOpen\":\"style_suggestionsContainerOpen__-3BTw\",\"suggestion\":\"style_suggestion__3kzpm\"};"],"sourceRoot":""}