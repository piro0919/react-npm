{"version":3,"sources":["components/packages/ReactAutosuggest/index.tsx","components/packages/ReactAutosuggest/style.module.scss"],"names":["ReactAutosuggest","packages","usePackages","useState","suggestions","setSuggestions","value","setValue","handleChange","useCallback","_","newValue","inputProps","useMemo","onChange","placeholder","getSuggestionValue","name","handleSuggestionsClearRequested","handleSuggestionsFetchRequested","filter","indexOf","renderSuggestion","onSuggestionsClearRequested","onSuggestionsFetchRequested","theme","styles","module","exports"],"mappings":"yLA6DeA,UAnDc,WAC3B,IAAMC,EAAWC,cADgB,EAEKC,mBAASF,GAFd,mBAE1BG,EAF0B,KAEbC,EAFa,OAGPF,mBAA0C,IAHnC,mBAG1BG,EAH0B,KAGnBC,EAHmB,KAI3BC,EAAeC,uBACnB,SAACC,EAAD,GAAsB,IAAhBC,EAAe,EAAfA,SACJJ,EAASI,KAEX,IAEIC,EAAaC,mBACjB,iBAAO,CACLP,QACAQ,SAAUN,EACVO,YAAa,cAEf,CAACP,EAAcF,IAEXU,EAAqBP,uBAEzB,qBAAGQ,OAAiB,IAChBC,EAAkCT,uBAEtC,WACAJ,EAAe,MACd,IACGc,EAAkCV,uBAGtC,YAAgB,IAAbH,EAAY,EAAZA,MACDD,EAAeJ,EAASmB,QAAO,qBAAGH,KAAgBI,QAAQf,IAAU,QAEtE,CAACL,IAEGqB,EAAmBb,uBAEvB,gBAAGQ,EAAH,EAAGA,KAAH,OAAc,8BAAMA,MAAa,IAEnC,OACE,cAAC,IAAD,CACED,mBAAoBA,EACpBJ,WAAYA,EACZW,4BAA6BL,EAC7BM,4BAA6BL,EAC7BG,iBAAkBA,EAClBlB,YAAaA,EACbqB,MAAOC,Q,mBCvDbC,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,yBAA2B,wCAAwC,WAAa","file":"static/js/2.014b7812.chunk.js","sourcesContent":["import usePackages, { Packages } from \"hooks/usePackages\";\nimport React, { FC, useCallback, useMemo, useState } from \"react\";\nimport Autosuggest, {\n  AutosuggestPropsBase,\n  InputProps,\n} from \"react-autosuggest\";\nimport styles from \"./style.module.scss\";\n\ntype Suggestion = Packages[0];\n\nconst ReactAutosuggest: FC = () => {\n  const packages = usePackages();\n  const [suggestions, setSuggestions] = useState(packages);\n  const [value, setValue] = useState<InputProps<Suggestion>[\"value\"]>(\"\");\n  const handleChange = useCallback<InputProps<Suggestion>[\"onChange\"]>(\n    (_, { newValue }) => {\n      setValue(newValue);\n    },\n    []\n  );\n  const inputProps = useMemo<InputProps<Suggestion>>(\n    () => ({\n      value,\n      onChange: handleChange,\n      placeholder: \"Type 'r'\",\n    }),\n    [handleChange, value]\n  );\n  const getSuggestionValue = useCallback<\n    AutosuggestPropsBase<Suggestion>[\"getSuggestionValue\"]\n  >(({ name }) => name, []);\n  const handleSuggestionsClearRequested = useCallback<\n    NonNullable<AutosuggestPropsBase<Suggestion>[\"onSuggestionsClearRequested\"]>\n  >(() => {\n    setSuggestions([]);\n  }, []);\n  const handleSuggestionsFetchRequested = useCallback<\n    NonNullable<AutosuggestPropsBase<Suggestion>[\"onSuggestionsFetchRequested\"]>\n  >(\n    ({ value }) => {\n      setSuggestions(packages.filter(({ name }) => name.indexOf(value) >= 0));\n    },\n    [packages]\n  );\n  const renderSuggestion = useCallback<\n    NonNullable<AutosuggestPropsBase<Suggestion>[\"renderSuggestion\"]>\n  >(({ name }) => <div>{name}</div>, []);\n\n  return (\n    <Autosuggest\n      getSuggestionValue={getSuggestionValue}\n      inputProps={inputProps}\n      onSuggestionsClearRequested={handleSuggestionsClearRequested}\n      onSuggestionsFetchRequested={handleSuggestionsFetchRequested}\n      renderSuggestion={renderSuggestion}\n      suggestions={suggestions}\n      theme={styles}\n    />\n  );\n};\n\nexport default ReactAutosuggest;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__2SHCQ\",\"suggestionsContainerOpen\":\"style_suggestionsContainerOpen__Z3Sbk\",\"suggestion\":\"style_suggestion__ExNG5\"};"],"sourceRoot":""}